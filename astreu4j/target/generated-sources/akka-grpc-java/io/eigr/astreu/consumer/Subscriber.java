
// Generated by Akka gRPC. DO NOT EDIT.
package io.eigr.astreu.consumer;

import akka.grpc.ProtobufSerializer;
import akka.grpc.javadsl.GoogleProtobufSerializer;

/**
 *  This service defines methods to be used by consumers to subscribe to a topic and receive messages for it. 
 */
public interface Subscriber {
  
  /**
   *  This method is used to receive messages that have been produced for a given topic.
   *  An exchange of typical messages for a consumer to connect to the broker and receive messages should be as follows:
   *      1. The customer starts by sending a message of type System that contains an internal message of type Connect, 
   *         which in turn indicates all the desired settings through their attributes (see Connect and System).
   *      2. The client is waiting for messages from the server.
   *      3. The server validates whether the client can connect and, if so, starts forwarding messages that are produced to the topic of interest. 
   *         If not, a System message containing an internal Failure message will be sent by the server 
   *         to the client informing the reason for the failure (see Failure and System).
   *      4. For each message received, the client must send a Messgae message containing the Ack confirming or rejecting the message.
   */
  akka.stream.javadsl.Source<io.eigr.astreu.protocol.Message, akka.NotUsed> subscribe(akka.stream.javadsl.Source<io.eigr.astreu.protocol.Message, akka.NotUsed> in);
  
  
  java.util.concurrent.CompletionStage<com.google.protobuf.Empty> unsubscribe(io.eigr.astreu.protocol.Message in);
  

  static String name = "astreu.consumer.Subscriber";
  static akka.grpc.ServiceDescription description = new akka.grpc.internal.ServiceDescriptionImpl(name, SubscriberProto.getDescriptor());

  public static class Serializers {
    
      public static ProtobufSerializer<io.eigr.astreu.protocol.Message> MessageSerializer = new GoogleProtobufSerializer<>(io.eigr.astreu.protocol.Message.class);
    
      public static ProtobufSerializer<com.google.protobuf.Empty> EmptySerializer = new GoogleProtobufSerializer<>(com.google.protobuf.Empty.class);
    
  }
}
